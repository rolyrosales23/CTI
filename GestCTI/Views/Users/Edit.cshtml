@model GestCTI.Models.Users

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@section breadcrumb{
    <li>@Html.ActionLink(@Resources.Login.Home, "Index", "Admin")</li>
    <li>@Html.ActionLink(@Resources.Admin.Users, "Index")</li>
    <li class="active">@Resources.Admin.ActionEdit</li>
}

<div class="page-title">
    <h2><span class="fa fa-arrow-circle-o-left"></span> @Resources.Admin.ActionEdit </h2>
</div>

<div class="panel panel-default tabs">
    <ul class="nav nav-tabs">
        <li class="active"><a href="#tab1" data-toggle="tab">@Resources.Login.Login_user</a></li>
    </ul>
    <div class="panel-body tab-content">
        <div class="col-md-6 col-lg-offset-3">
            <div class="tab-pane active" id="tab1">
                @using (Html.BeginForm("Edit", "Users", FormMethod.Post, new { id = "myform" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Id)

                        <div class="form-group">
                            <label class="control-label col-md-3" for="Username">@Resources.Admin.Username</label>
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", Name = "Username" } })
                                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-3" for="email">@Resources.Admin.Email</label>
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", Name = "email" } })
                                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-3" for="FirstName">@Resources.Admin.FirstName</label>
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", Name = "FirstName" } })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-3" for="MiddleName">@Resources.Admin.MiddleName</label>
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control", Name = "MiddleName" } })
                                @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-3" for="LastName">@Resources.Admin.LastName</label>
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", Name = "LastName" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-3" for="Role">@Resources.Admin.Role</label>
                            <div class="col-md-9">
                                <select class="form-control select" name="Role" id="Rol">
                                    <option value="agent">Agent</option>
                                    <option value="admin">Administrator</option>
                                    <option value="supervisor">Supervisor</option>
                                </select>
                                @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-3" for="IdLocation">@Resources.Admin.Location</label>
                            <div class="col-md-9">
                                @Html.DropDownList("IdLocation", null, htmlAttributes: new { @class = "form-control select" })
                                @Html.ValidationMessageFor(model => model.IdLocation, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-3" for="IdCompany">@Resources.Admin.Company</label>
                            <div class="col-md-9">
                                @Html.DropDownList("IdCompany", null, htmlAttributes: new { @class = "form-control select" })
                                @Html.ValidationMessageFor(model => model.IdCompany, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-3" for="Active">@Resources.Admin.Active</label>
                            <div class="col-md-9" style="padding-top: 5px">
                                @Html.CheckBoxFor(model => model.Active, new { @class = "icheckbox" })
                                @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-3 col-md-9 ">
                                <input type="submit" value=@Resources.Admin.Save class="btn btn-success btn-block" />
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section scripts{
    @Scripts.Render("~/bundles/jqueryval")

    <script type='text/javascript' src='~/assets/js/plugins/icheck/icheck.min.js'></script>
    <script type="text/javascript" src="~/assets/js/plugins/mcustomscrollbar/jquery.mCustomScrollbar.min.js"></script>

    <script type='text/javascript' src='~/assets/js/plugins/bootstrap/bootstrap-datepicker.js'></script>
    <script type='text/javascript' src='~/assets/js/plugins/bootstrap/bootstrap-select.js'></script>
    <script type='text/javascript' src='~/assets/js/plugins/jquery-validation/jquery.validate.js'></script>
    <script type='text/javascript' src='~/assets/js/plugins/maskedinput/jquery.maskedinput.min.js'></script>

    <script type="text/javascript">
        var jvalidate = $("#myform").validate({
            ignore: [],
            rules: {
                Username: {
                    required: true,
                    minlength: 3
                },
                email: {
                    required: true,
                    email: true
                },
                FirstName: {
                    required: true
                },
                MiddleName: {
                    required: false
                },
                LastName: {
                    required: false
                },
                Role: {
                    required: true
                },
                IdLocation: {
                    required: true
                },
                IdCompany: {
                    required: true
                }
            }
        });

        $('#Rol').val(@Html.Raw(Json.Encode(Model.Role)));
    </script>

}
