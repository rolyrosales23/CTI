@model GestCTI.Models.Users

@{
    ViewBag.Title = "Create";
}

@section breadcrumb{
    <li>@Html.ActionLink(@Resources.Login.Home, "Index", "Admin")</li>
    <li>@Html.ActionLink(Resources.Admin.Users, "Index")</li>
    <li class="active">@Resources.Admin.ActionCreateNew</li>
}

<div class="page-title">
    <h2><span class="fa fa-arrow-circle-o-left"></span> @Resources.Admin.ActionCreateNew @Resources.Admin.Users</h2>
</div>

<div class="panel panel-default tabs">
    <ul class="nav nav-tabs">
        <li class="active"><a href="#tab1" data-toggle="tab">@Resources.Login.Login_user</a></li>
    </ul>
    <div class="panel-body tab-content">
        <div class="col-md-6 col-lg-offset-3">
            <div class="tab-pane active" id="tab1">
                @using (Html.BeginForm("Create", "Users", FormMethod.Post, new { id = "myform" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", Name = "Username" } })
                                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", type = "password", Name = "Password", Id = "pass" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", type = "password", Name = "Re-Password" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", Name = "email" } })
                                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", Name = "FirstName" } })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control", Name = "MiddleName" } })
                                @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", Name = "LastName" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("Role", null, htmlAttributes: new { @class = "form-control", Name = "Role" })
                                @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.IdLocation, "IdLocation", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("IdLocation", null, htmlAttributes: new { @class = "form-control", Name = "Location" })
                                @Html.ValidationMessageFor(model => model.IdLocation, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.IdCompany, "IdCompany", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("IdCompany", null, htmlAttributes: new { @class = "form-control", Name = "Company" })
                                @Html.ValidationMessageFor(model => model.IdCompany, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.Active)
                                    @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10 ">
                                <input type="submit" value=@Resources.Admin.Save class="btn btn-success btn-block" />
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section scripts{
    @Scripts.Render("~/bundles/jqueryval")

    <script type='text/javascript' src='~/assets/js/plugins/icheck/icheck.min.js'></script>
    <script type="text/javascript" src="~/assets/js/plugins/mcustomscrollbar/jquery.mCustomScrollbar.min.js"></script>

    <script type='text/javascript' src='~/assets/js/plugins/bootstrap/bootstrap-datepicker.js'></script>
    <script type='text/javascript' src='~/assets/js/plugins/bootstrap/bootstrap-select.js'></script>
    <script type='text/javascript' src='~/assets/js/plugins/jquery-validation/jquery.validate.js'></script>
    <script type='text/javascript' src='~/assets/js/plugins/maskedinput/jquery.maskedinput.min.js'></script>

    <script type="text/javascript">
        var jvalidate = $("#myform").validate({
                ignore: [],
                rules: {
                    Username: {
                        required: true,
                        minlength: 3
                    },
                    Password: {
                        required: true,
                        minlength: 3
                    },
                    'Re-Password': {
                        required: true,
                        minlength: 3,
                        equalTo: "#pass"
                    },
                    email: {
                        required: true,
                        email: true
                    },
                    FirstName: {
                        required: false
                    },
                    MiddleName: {
                        required: false
                    },
                    LastName: {
                        required: false
                    },
                    Role: {
                        required: true
                    },
                    Location: {
                        required: true
                    },
                    Company: {
                        required: true
                    }
                }
            });

    </script>

}
